{"mappings":"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","sources":["src/js/render-watched.js","src/js/lib-card-markup.js","src/js/render-queue.js","src/js/library_button.js","src/js/firebase/firebase-auth-library.js"],"sourcesContent":["import { DatabaseAPI } from './firebase/database-api';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport { Report } from 'notiflix';\nimport {refs} from './refs';\nimport { renderMarkup } from './lib-card-markup';\n\nexport const service = new DatabaseAPI();\n\nexport async function renderWatchedList() {\n  Loading.pulse({\n    svgColor: '#b92f2c',\n  });\n  try {\n    const listArr = await service.getWatchedList();\n    const markup = renderMarkup(listArr);\n    refs.galleryEl.insertAdjacentHTML('beforeend', markup);\n    Loading.remove();\n    window.removeEventListener('load', renderWatchedList);\n  } catch (error) {\n    console.log(error);\n    Report.info(\n      'Filmoteka Info',\n      'This List is empty. Start adding some movies to see them here',\n      'OK'\n    );\n  }\n}","import {\n    getGenresLib,\n    getReleaseDate,\n    getMovieTitle,\n    getMoviePoster,\n  } from './markup-func';\n\nexport function renderMarkup(listArr) {\n    return listArr\n      .map(({ id, title, poster_path, release_date, genres }) => {\n        return `<li class='card-item' data-id='${id}'>\n        <div class='image__wrapper'>\n          <img class='movie__poster' src='${getMoviePoster(\n            poster_path\n          )}' width='395' alt='${title}' loading='lazy' />\n        </div>\n        <div class='card-item__info-wrapper'>\n        <h2 class='card-item__title'>${getMovieTitle(title)}</h2>\n        <div class='card-item__info'>\n        <p class='card-item__genre'>${getGenresLib(genres)}</p>\n        <span class='card-item__year'>|</span>\n        <p class='card-item__year'>${getReleaseDate(release_date)}</p>\n        </div>\n        </div>\n        </li>`;\n      })\n      .join('');\n  }","import { renderMarkup } from './lib-card-markup';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport {refs} from './refs';\nimport { service } from './render-watched';\n\nexport async function renderQueueList() {\n  Loading.pulse({\n    svgColor: '#b92f2c',\n  });\n  const listArr = await service.getQueueList();\n  const markup = renderMarkup(listArr);\n  refs.libGalleryEl.insertAdjacentHTML('beforeend', markup);\n  Loading.remove();\n}\n","import { renderWatchedList } from './render-watched';\nimport { renderQueueList } from './render-queue';\nimport {refs} from './refs';\n\nfunction handleButtonClick(event) {\n  const clickedButton = event.target;\n  if (clickedButton === refs.buttonWatchedEl) {\n    refs.libGalleryEl.innerHTML = '';\n    renderWatchedList();\n    if (!refs.buttonWatchedEl.classList.contains('lib--active')) {\n      refs.buttonWatchedEl.classList.add('lib--active');\n      refs.buttonQueueEl.classList.remove('lib--active');\n    }\n  } else if (clickedButton === refs.buttonQueueEl) {\n    refs.libGalleryEl.innerHTML = '';\n    renderQueueList();\n    if (!refs.buttonQueueEl.classList.contains('lib--active')) {\n      refs.buttonWatchedEl.classList.remove('lib--active');\n      refs.buttonQueueEl.classList.add('lib--active');\n    }\n  }\n}\n\nrefs.buttonWatchedEl.addEventListener('click', handleButtonClick);\nrefs.buttonQueueEl.addEventListener('click', handleButtonClick);\nwindow.addEventListener('load', renderWatchedList);\n","import { firebaseApp } from './firebase-init';\nimport { getAuth, onAuthStateChanged, signOut } from 'firebase/auth';\nimport { refs } from './auth-modal-refs';\nimport { Notify } from 'notiflix';\n\nconst auth = getAuth(firebaseApp);\n\nconst monitorAuthState = async () => {\n  onAuthStateChanged(auth, user => {\n    if (user) {\n      refs.openModalLibraryBtn.classList.add('log-out');\n      refs.openModalLibraryBtn.setAttribute('title', 'Click to Log Out');\n      refs.openModalLibraryBtn.classList.remove('log-in');\n    } else {\n      refs.openModalLibraryBtn.classList.remove('log-out');\n      refs.openModalLibraryBtn.setAttribute('title', 'Click to Log In');\n      refs.openModalLibraryBtn.classList.add('log-in');\n    }\n  });\n};\nmonitorAuthState();\n\nconst logout = async e => {\n  if (!e.target.classList.contains('log-out')) {\n    return;\n  }\n  await signOut(auth);\n  Notify.success('You are loged out. See you soon');\n\n  setTimeout(() => window.location.replace('./index.html'), 2000);\n};\n\nrefs.openModalLibraryBtn.addEventListener('click', logout);\n"],"names":["$bpxeT","parcelRequire","$3mSO2","$56c676e850ca829d$export$add40575555c273c","listArr","map","param","id","title","poster_path","release_date","genres","concat","getMoviePoster","getMovieTitle","getGenresLib","getReleaseDate","join","$d887eeac15aee035$export$6ed414b8d8bead88","$k30FB","DatabaseAPI","$d887eeac15aee035$export$8243be6ab7611de2","$d887eeac15aee035$var$_renderWatchedList","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","markup","$7rQOT","Loading","pulse","svgColor","getWatchedList","_ctx","sent","$4Nugj","refs","galleryEl","insertAdjacentHTML","remove","window","removeEventListener","console","log","t0","$6JpON","Report","info","$f3e5ebb6bb433a3d$export$69bf332fc394edc5","$f3e5ebb6bb433a3d$var$_renderQueueList","getQueueList","libGalleryEl","$5f231e217f3687e3$var$handleButtonClick","event","clickedButton","target","buttonWatchedEl","innerHTML","classList","contains","add","buttonQueueEl","addEventListener","$53555ed19cee43ff$var$auth","$gQOBw","getAuth","$fGC9r","firebaseApp","$53555ed19cee43ff$var$monitorAuthState","onAuthStateChanged","user","$k4iT1","openModalLibraryBtn","setAttribute","$53555ed19cee43ff$var$logout","e","signOut","Notify","success","setTimeout","location","replace"],"version":3,"file":"library.0b45c446.js.map"}