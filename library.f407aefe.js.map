{"mappings":"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","sources":["src/js/library-window-listeners.js","src/js/render-watched.js","src/js/lib-card-markup.js","src/js/render-queue.js","src/js/library_button.js","src/js/modal-card_library.js","src/js/modal-buttons-library.js","src/js/firebase/firebase-auth-library.js"],"sourcesContent":["import onAuth from './onAuth';\nimport { onThemeBtnClick } from './themse-picker';\nwindow.addEventListener('load', onAuth);\ndocument\n  .querySelector('#theme-toggle')\n  .addEventListener('click', onThemeBtnClick);\n","import { DatabaseAPI } from './firebase/database-api';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport { Report } from 'notiflix';\nimport { refs } from './refs';\nimport { renderMarkup, renderLibPlug } from './lib-card-markup';\n\nexport const service = new DatabaseAPI();\n\nexport async function renderWatchedList() {\n  Loading.pulse({\n    svgColor: '#b92f2c',\n  });\n  refs.libGalleryEl.innerHTML = '';\n  refs.plugWrapperLight.classList.add('hidden');\n  try {\n    const listArr = await service.getWatchedList();\n    if (listArr.length !== 0) {\n      const markup = renderMarkup(listArr);\n      refs.libGalleryEl.insertAdjacentHTML('beforeend', markup);\n    } else {\n      renderLibPlug();\n    }\n    window.removeEventListener('load', renderWatchedList);\n  } catch (error) {\n    Notify.failure('Ooops! Something went wrong. Try reloading page');\n  }\n  Loading.remove();\n}\n\nexport async function renderWatchedListOnModalClose() {\n  Loading.pulse({\n    svgColor: '#b92f2c',\n  });\n  refs.libGalleryEl.innerHTML = '';\n  refs.plugWrapperLight.classList.add('hidden');\n  try {\n    const listArr = await service.getWatchedList();\n    if (listArr.length !== 0) {\n      const markup = renderMarkup(listArr);\n      refs.libGalleryEl.innerHTML = markup;\n    } else {\n      renderLibPlug();\n    }\n  } catch (error) {\n    Notify.failure('Ooops! Something went wrong. Try reloading page');\n  }\n\n  Loading.remove();\n}\n","import {\n  getGenresLib,\n  getReleaseDate,\n  getMovieTitle,\n  getMoviePoster,\n} from './markup-func';\nimport { storageKey } from './themse-picker';\nimport { refs } from './refs';\n\nexport function renderMarkup(listArr) {\n  return listArr\n    .map(({ id, title, poster_path, release_date, genres }) => {\n      return `<li class='card-item' data-id='${id}'>\n        <div class='image__wrapper'>\n          <img class='movie__poster' src='${getMoviePoster(\n            poster_path\n          )}' width='395' alt='${title}' loading='lazy' />\n        </div>\n        <div class='card-item__info-wrapper'>\n        <h2 class='card-item__title'>${getMovieTitle(title)}</h2>\n        <div class='card-item__info'>\n        <p class='card-item__genre'>${getGenresLib(genres)}</p>\n        <span class='card-item__year'>|</span>\n        <p class='card-item__year'>${getReleaseDate(release_date)}</p>\n        </div>\n        </div>\n        </li>`;\n    })\n    .join('');\n}\n\nexport function renderLibPlug() {\n    refs.plugWrapperLight.classList.remove('hidden');\n}\n","import { renderMarkup, renderLibPlug } from './lib-card-markup';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport { refs } from './refs';\nimport { service } from './render-watched';\nimport { Report } from 'notiflix';\n\nexport async function renderQueueList() {\n  Loading.pulse({\n    svgColor: '#b92f2c',\n  });\n  refs.libGalleryEl.innerHTML = '';\n  refs.plugWrapperLight.classList.add('hidden');\n  try {\n    const listArr = await service.getQueueList();\n    if (listArr.length !== 0) {\n      const markup = renderMarkup(listArr);\n      refs.libGalleryEl.insertAdjacentHTML('beforeend', markup);\n    } else {\n      renderLibPlug();\n    }\n  } catch (error) {\n    Notify.failure('Ooops! Something went wrong. Try reloading page');\n  }\n  Loading.remove();\n}\n\nexport async function renderQueueListOnModalClose() {\n  Loading.pulse({\n    svgColor: '#b92f2c',\n  });\n  refs.libGalleryEl.innerHTML = '';\n  refs.plugWrapperLight.classList.add('hidden');\n\n  try {\n    const listArr = await service.getQueueList();\n    if (listArr.length !== 0) {\n      const markup = renderMarkup(listArr);\n      refs.libGalleryEl.innerHTML = markup;\n    } else {\n      renderLibPlug();\n    }\n  } catch (error) {\n    Notify.failure('Ooops! Something went wrong. Try reloading page');\n  }\n\n  Loading.remove();\n}\n","import { renderWatchedList } from './render-watched';\nimport { renderQueueList } from './render-queue';\nimport {refs} from './refs';\n\nfunction handleButtonClick(event) {\n  const clickedButton = event.target;\n  if (clickedButton === refs.buttonWatchedEl) {\n    refs.libGalleryEl.innerHTML = '';\n    renderWatchedList();\n    if (!refs.buttonWatchedEl.classList.contains('lib--active')) {\n      refs.buttonWatchedEl.classList.add('lib--active');\n      refs.buttonQueueEl.classList.remove('lib--active');\n    }\n  } else if (clickedButton === refs.buttonQueueEl) {\n    refs.libGalleryEl.innerHTML = '';\n    renderQueueList();\n    if (!refs.buttonQueueEl.classList.contains('lib--active')) {\n      refs.buttonWatchedEl.classList.remove('lib--active');\n      refs.buttonQueueEl.classList.add('lib--active');\n    }\n  }\n}\n\nrefs.buttonWatchedEl.addEventListener('click', handleButtonClick);\nrefs.buttonQueueEl.addEventListener('click', handleButtonClick);\nwindow.addEventListener('load', renderWatchedList);\n","import { FilmAPI } from './api';\nimport fetchModalCard from './modal-card_render';\nimport { renderWatchedListOnModalClose } from './render-watched';\nimport { renderQueueListOnModalClose } from './render-queue';\n\nconst modalCardBackdrop = document.querySelector('.modal-card__backdrop');\nconst galeryList = document.querySelector('.library-cards__list');\nconst body = document.querySelector('body');\nconst modalCard = document.querySelector('.modal-card');\n\nconst btnCloseModalEl = document.querySelector('.modal-card__close-btn');\nconst modalCardAPI = new FilmAPI();\ngaleryList.addEventListener('click', getMovieObjOnClick);\n\nasync function getMovieObjOnClick(evt) {\n  console.log(evt.target.closest('.cart-items'));\n  modalCardAPI.youTubeID = evt.target.closest('.card-item').dataset.id;\n  localStorage.setItem(\n    'LOCALSTORAGE_KEY',\n    `${evt.target.closest('.card-item').dataset.id}`\n  );\n  if (!evt.target.closest('.card-item')) {\n    return;\n  }\n  let liId = evt.target.closest('.card-item').dataset.id;\n  const movieObj = await modalCardAPI.fetchDetails(liId);\n  fetchModalCard(movieObj);\n  body.classList.add('no-scroll');\n  modalCardBackdrop.classList.remove('hidden');\n}\n\nwindow.addEventListener('keydown', handleEscKeyDown);\n\nfunction handleEscKeyDown(event) {\n  if (event.code === 'Escape') {\n    body.classList.remove('no-scroll');\n    modalCardBackdrop.classList.add('hidden');\n    renderLibraryOnCloseModal();\n  }\n}\nbtnCloseModalEl.addEventListener('click', evt => {\n  body.classList.remove('no-scroll');\n  modalCardBackdrop.classList.add('hidden');\n  renderLibraryOnCloseModal();\n});\n\nmodalCardBackdrop.addEventListener('click', e => {\n  if (e.target === modalCardBackdrop) {\n    modalCardBackdrop.classList.add('hidden');\n    body.classList.remove('no-scroll');\n    renderLibraryOnCloseModal();\n  }\n});\n\nfunction renderLibraryOnCloseModal() {\n  if (\n    document.querySelector('.lib-watched').classList.contains('lib--active')\n  ) {\n    renderWatchedListOnModalClose();\n  } else {\n    renderQueueListOnModalClose();\n  }\n}\n","import { DatabaseAPI } from './firebase/database-api';\nimport { FilmAPI } from './api';\nimport { Notify } from 'notiflix';\n\nconst filmAPI = new FilmAPI();\nconst databaseAPI = new DatabaseAPI();\n\nconst galeryList = document.querySelector('.library-cards__list');\nconst modalCard = document.querySelector('.modal-card');\nlet movieId = '';\n\nconst switchWatchedBtnToRemove = () => {\n  setTimeout(() => {\n    const watchedBtn = document.querySelector('[data-card-modal-watched-film]');\n    watchedBtn.classList.remove('add-to-watched');\n    watchedBtn.classList.add('remove-from-watched');\n    watchedBtn.textContent = 'Remove from watched';\n  }, 150);\n};\n\nconst switchQueueButtonToRemove = () => {\n  setTimeout(() => {\n    const queueBtn = document.querySelector('[data-card-modal-queue-film]');\n    queueBtn.classList.remove('add-to-queue');\n    queueBtn.classList.add('remove-from-queue');\n    queueBtn.textContent = 'Remove from queue';\n  }, 150);\n};\n\nconst switchWatchedBtnToAdd = () => {\n  setTimeout(() => {\n    const watchedBtn = document.querySelector('[data-card-modal-watched-film]');\n    watchedBtn.classList.remove('remove-from-watched');\n    watchedBtn.classList.add('add-to-watched');\n    watchedBtn.textContent = 'Add to watched';\n  }, 150);\n};\n\nconst switchQueueButtonToAdd = () => {\n  setTimeout(() => {\n    const queueBtn = document.querySelector('[data-card-modal-queue-film]');\n    queueBtn.classList.remove('remove-from-queue');\n    queueBtn.classList.add('add-to-queue');\n    queueBtn.textContent = 'Add to queue';\n  }, 150);\n};\n\nexport const checkList = async e => {\n  if (!e.target.closest('.card-item')) {\n    return;\n  }\n\n  try {\n    movieId = Number(e.target.closest('.card-item').dataset.id);\n    const presentInWatched = await databaseAPI.checkPresenseInWatched(movieId);\n    if (presentInWatched) {\n      switchWatchedBtnToRemove();\n    } else if (!presentInWatched) {\n      switchWatchedBtnToAdd();\n    }\n    const presentInQueue = await databaseAPI.checkPresenseInQueue(movieId);\n    if (presentInQueue) {\n      switchQueueButtonToRemove();\n    } else if (!presentInQueue) {\n      switchQueueButtonToAdd();\n    }\n  } catch (error) {\n    Notify.failure('Ooops! Something went wrong. Try reloading page');\n  }\n};\n\nexport const addMovies = async e => {\n  if ('cardModalWatchedFilm' in e.target.dataset) {\n    try {\n      if (e.target.classList.contains('add-to-watched')) {\n        const movieObj = await filmAPI.fetchDetails(movieId);\n        await databaseAPI.addToWatched(movieObj);\n        Notify.success(`${movieObj.title} added to Watched List`);\n        switchWatchedBtnToRemove();\n        const presentInQueue = await databaseAPI.checkPresenseInQueue(movieId);\n        if (presentInQueue) {\n          switchQueueButtonToAdd();\n          await databaseAPI.removeMovieFromQueue(movieId);\n          Notify.success(`${movieObj.title} removed from Queue List`);\n        }\n      }\n    } catch (error) {\n      Notify.failure('Ooops! Something went wrong. Try reloading page');\n    }\n  } else if ('cardModalQueueFilm' in e.target.dataset) {\n    try {\n      if (e.target.classList.contains('add-to-queue')) {\n        const movieObj = await filmAPI.fetchDetails(movieId);\n        await databaseAPI.addToQueue(movieObj);\n        Notify.success(`${movieObj.title} added to Queue List`);\n        switchQueueButtonToRemove();\n        const presentInWatched = await databaseAPI.checkPresenseInWatched(\n          movieId\n        );\n        if (presentInWatched) {\n          switchWatchedBtnToAdd();\n          await databaseAPI.removeMovieFromWatched(movieId);\n          Notify.success(`${movieObj.title} removed from Watched List`);\n        }\n      }\n    } catch (error) {\n      Notify.failure('Ooops! Something went wrong. Try reloading page');\n    }\n  }\n};\n\nexport const removeMovies = async e => {\n  try {\n    if ('cardModalWatchedFilm' in e.target.dataset) {\n      if (e.target.classList.contains('remove-from-watched')) {\n        await databaseAPI.removeMovieFromWatched(movieId);\n        Notify.success(`Movie removed from Watched List`);\n\n        switchWatchedBtnToAdd();\n      }\n    } else if ('cardModalQueueFilm' in e.target.dataset) {\n      if (e.target.classList.contains('remove-from-queue')) {\n        await databaseAPI.removeMovieFromQueue(movieId);\n        Notify.success(`Movie removed from Queue List`);\n\n        switchQueueButtonToAdd();\n      }\n    }\n  } catch (error) {\n    console.log(error);\n    Notify.failure('Ooops! Something went wrong. Try reloading page');\n  }\n};\n\ngaleryList.addEventListener('click', checkList);\nmodalCard.addEventListener('click', addMovies);\nmodalCard.addEventListener('click', removeMovies);\n","import { firebaseApp } from './firebase-init';\nimport { getAuth, onAuthStateChanged, signOut } from 'firebase/auth';\nimport { refs } from './auth-modal-refs';\nimport { Notify, Confirm } from 'notiflix';\n\nconst auth = getAuth(firebaseApp);\n\nconst monitorAuthState = async () => {\n  onAuthStateChanged(auth, user => {\n    if (user) {\n      refs.openModalLibraryBtn.classList.add('log-out');\n      refs.openModalLibraryBtn.setAttribute('title', 'Click to Log Out');\n      refs.openModalLibraryBtn.classList.remove('log-in');\n    } else {\n      refs.openModalLibraryBtn.classList.remove('log-out');\n      refs.openModalLibraryBtn.setAttribute('title', 'Click to Log In');\n      refs.openModalLibraryBtn.classList.add('log-in');\n    }\n  });\n};\nmonitorAuthState();\n\nconst logout = async e => {\n  if (!e.target.classList.contains('log-out')) {\n    return;\n  }\n  Confirm.show(\n    'You are about to log out.',\n    'Proceed?',\n    'Log Out',\n    'Stay Logged In',\n    async () => {\n      await signOut(auth);\n      Notify.success(\n        'You are loged out. See you soon. Redirecting to frontpage'\n      );\n      setTimeout(() => window.location.replace('./index.html'), 2000);\n    },\n    () => {\n      return;\n    },\n    {\n      titleColor: '#b92f2c',\n      fontFamily: 'Roboto, sans-serif;',\n      borderRadius: '10px',\n      okButtonBackground: '#b92f2c',\n    }\n  );\n};\n\nrefs.openModalLibraryBtn.addEventListener('click', logout);\n"],"names":["$8j3eh","parcelRequire","window","addEventListener","default","document","querySelector","$ayzP0","onThemeBtnClick","$4O2bx","$eVEnd","$a8fb871f337d10a4$export$add40575555c273c","listArr","map","id","title","poster_path","release_date","genres","getMoviePoster","getMovieTitle","getGenresLib","getReleaseDate","join","$a8fb871f337d10a4$export$e06bc9a23660112d","$krGWQ","refs","plugWrapperLight","classList","remove","$0b5f6a1499574303$export$6ed414b8d8bead88","DatabaseAPI","async","$0b5f6a1499574303$export$8243be6ab7611de2","$dSs1Y","Loading","pulse","svgColor","libGalleryEl","innerHTML","add","getWatchedList","length","markup","insertAdjacentHTML","removeEventListener","error","Notify","failure","$0b5f6a1499574303$export$be04b9abd42a0d96","$6f51af6bca2687d5$export$69bf332fc394edc5","getQueueList","$6f51af6bca2687d5$export$1623855110ae03ed","$0a9b4fa6ebff9285$var$handleButtonClick","event","clickedButton","target","buttonWatchedEl","contains","buttonQueueEl","$7rYDH","$dce9346a2fde36a8$var$modalCardBackdrop","$dce9346a2fde36a8$var$galeryList","$dce9346a2fde36a8$var$body","$dce9346a2fde36a8$var$btnCloseModalEl","$dce9346a2fde36a8$var$modalCardAPI","FilmAPI","$dce9346a2fde36a8$var$renderLibraryOnCloseModal","evt","console","log","closest","youTubeID","dataset","localStorage","setItem","liId","movieObj","fetchDetails","$bQoWw","code","e","$a3d8058a7f12dc2f$var$filmAPI","$a3d8058a7f12dc2f$var$databaseAPI","$a3d8058a7f12dc2f$var$galeryList","$a3d8058a7f12dc2f$var$modalCard","$a3d8058a7f12dc2f$var$movieId","$a3d8058a7f12dc2f$var$switchWatchedBtnToRemove","setTimeout","watchedBtn","textContent","$a3d8058a7f12dc2f$var$switchQueueButtonToRemove","queueBtn","$a3d8058a7f12dc2f$var$switchWatchedBtnToAdd","$a3d8058a7f12dc2f$var$switchQueueButtonToAdd","Number","presentInWatched","checkPresenseInWatched","presentInQueue","checkPresenseInQueue","$7Y9D8","addToWatched","success","removeMovieFromQueue","addToQueue","removeMovieFromWatched","error1","$bcNH0","$d6814f0e564c1480$var$auth","$eyjy7","getAuth","firebaseApp","onAuthStateChanged","user","$5Zbuc","openModalLibraryBtn","setAttribute","$d6814f0e564c1480$var$monitorAuthState","Confirm","show","signOut","location","replace","titleColor","fontFamily","borderRadius","okButtonBackground"],"version":3,"file":"library.f407aefe.js.map"}