{"mappings":"ghBAAA,IAAAA,EAAAC,EAAA,S,uCCAAC,EAAAD,EAAA,SAOO,SAASE,EAAaC,GACzB,OAAOA,EACJC,KAAI,EAACC,GAAEA,EAAEC,MAAEA,EAAKC,YAAEA,EAAWC,aAAEA,EAAYC,OAAEA,KACrC,kCAAkCJ,yFAEL,EAAAJ,EAAAS,gBAChCH,wBACqBD,8HAGM,EAAAL,EAAAU,eAAcL,wFAEf,EAAAL,EAAAW,cAAaH,+FAEd,EAAAR,EAAAY,gBAAeL,0DAK7CM,KAAK,G,CDpBL,MAAMC,EAAU,IAAI,EAAAhB,EAAAiB,aAEpBC,eAAeC,IACpBC,EAAAC,QAAQC,MAAM,CACZC,SAAU,YAEZ,IACE,MACMC,EAASrB,QADOa,EAAQS,kBAE9BC,EAAAC,KAAKC,UAAUC,mBAAmB,YAAaL,GAC/CJ,EAAAC,QAAQS,SACRC,OAAOC,oBAAoB,OAAQb,E,CACnC,MAAOc,GACPC,QAAQC,IAAIF,GACZG,EAAAC,OAAOC,KACL,iBACA,gEACA,K,4BElBCpB,eAAeqB,IACpBnB,EAAAC,QAAQC,MAAM,CACZC,SAAU,YAEZ,MACMC,EAASrB,QADOa,EAAQwB,gBAE9Bd,EAAAC,KAAKc,aAAaZ,mBAAmB,YAAaL,GAClDJ,EAAAC,QAAQS,Q,CCRV,SAASY,EAAkBC,GACzB,MAAMC,EAAgBD,EAAME,OACxBD,IAAkBlB,EAAAC,KAAKmB,iBACzBpB,EAAAC,KAAKc,aAAaM,UAAY,GAC9B5B,IACKO,EAAAC,KAAKmB,gBAAgBE,UAAUC,SAAS,iBAC3CvB,EAAAC,KAAKmB,gBAAgBE,UAAUE,IAAI,eACnCxB,EAAAC,KAAKwB,cAAcH,UAAUlB,OAAO,iBAE7Bc,IAAkBlB,EAAAC,KAAKwB,gBAChCzB,EAAAC,KAAKc,aAAaM,UAAY,GAC9BR,IACKb,EAAAC,KAAKwB,cAAcH,UAAUC,SAAS,iBACzCvB,EAAAC,KAAKmB,gBAAgBE,UAAUlB,OAAO,eACtCJ,EAAAC,KAAKwB,cAAcH,UAAUE,IAAI,gB,gBAKvCvB,KAAKmB,gBAAgBM,iBAAiB,QAASV,GAC/ChB,EAAAC,KAAKwB,cAAcC,iBAAiB,QAASV,GAC7CX,OAAOqB,iBAAiB,OAAQjC,G,4CCzBhC,IAAAkC,EAAApD,EAAA,S,uCAKA,MAAMqD,GAAO,EAAAC,EAAAC,SAAQH,EAAAI,aAEIvC,YACvB,EAAAqC,EAAAG,oBAAmBJ,GAAMK,IACnBA,GACFC,EAAAjC,KAAKkC,oBAAoBb,UAAUE,IAAI,WACvCU,EAAAjC,KAAKkC,oBAAoBC,aAAa,QAAS,oBAC/CF,EAAAjC,KAAKkC,oBAAoBb,UAAUlB,OAAO,YAE1C8B,EAAAjC,KAAKkC,oBAAoBb,UAAUlB,OAAO,WAC1C8B,EAAAjC,KAAKkC,oBAAoBC,aAAa,QAAS,mBAC/CF,EAAAjC,KAAKkC,oBAAoBb,UAAUE,IAAI,U,GAEzC,EAEJa,GAYAH,EAAAjC,KAAKkC,oBAAoBT,iBAAiB,SAV3BlC,MAAM8C,IACdA,EAAEnB,OAAOG,UAAUC,SAAS,mBAG3B,EAAAM,EAAAU,SAAQX,GACdlB,EAAA8B,OAAOC,QAAQ,mCAEfC,YAAW,IAAMrC,OAAOsC,SAASC,QAAQ,iBAAiB,KAAK,I","sources":["src/js/render-watched.js","src/js/lib-card-markup.js","src/js/render-queue.js","src/js/library_button.js","src/js/firebase/firebase-auth-library.js"],"sourcesContent":["import { DatabaseAPI } from './firebase/database-api';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport { Report } from 'notiflix';\nimport {refs} from './refs';\nimport { renderMarkup } from './lib-card-markup';\n\nexport const service = new DatabaseAPI();\n\nexport async function renderWatchedList() {\n  Loading.pulse({\n    svgColor: '#b92f2c',\n  });\n  try {\n    const listArr = await service.getWatchedList();\n    const markup = renderMarkup(listArr);\n    refs.galleryEl.insertAdjacentHTML('beforeend', markup);\n    Loading.remove();\n    window.removeEventListener('load', renderWatchedList);\n  } catch (error) {\n    console.log(error);\n    Report.info(\n      'Filmoteka Info',\n      'This List is empty. Start adding some movies to see them here',\n      'OK'\n    );\n  }\n}","import {\n    getGenresLib,\n    getReleaseDate,\n    getMovieTitle,\n    getMoviePoster,\n  } from './markup-func';\n\nexport function renderMarkup(listArr) {\n    return listArr\n      .map(({ id, title, poster_path, release_date, genres }) => {\n        return `<li class='card-item' data-id='${id}'>\n        <div class='image__wrapper'>\n          <img class='movie__poster' src='${getMoviePoster(\n            poster_path\n          )}' width='395' alt='${title}' loading='lazy' />\n        </div>\n        <div class='card-item__info-wrapper'>\n        <h2 class='card-item__title'>${getMovieTitle(title)}</h2>\n        <div class='card-item__info'>\n        <p class='card-item__genre'>${getGenresLib(genres)}</p>\n        <span class='card-item__year'>|</span>\n        <p class='card-item__year'>${getReleaseDate(release_date)}</p>\n        </div>\n        </div>\n        </li>`;\n      })\n      .join('');\n  }","import { renderMarkup } from './lib-card-markup';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport {refs} from './refs';\nimport { service } from './render-watched';\n\nexport async function renderQueueList() {\n  Loading.pulse({\n    svgColor: '#b92f2c',\n  });\n  const listArr = await service.getQueueList();\n  const markup = renderMarkup(listArr);\n  refs.libGalleryEl.insertAdjacentHTML('beforeend', markup);\n  Loading.remove();\n}\n","import { renderWatchedList } from './render-watched';\nimport { renderQueueList } from './render-queue';\nimport {refs} from './refs';\n\nfunction handleButtonClick(event) {\n  const clickedButton = event.target;\n  if (clickedButton === refs.buttonWatchedEl) {\n    refs.libGalleryEl.innerHTML = '';\n    renderWatchedList();\n    if (!refs.buttonWatchedEl.classList.contains('lib--active')) {\n      refs.buttonWatchedEl.classList.add('lib--active');\n      refs.buttonQueueEl.classList.remove('lib--active');\n    }\n  } else if (clickedButton === refs.buttonQueueEl) {\n    refs.libGalleryEl.innerHTML = '';\n    renderQueueList();\n    if (!refs.buttonQueueEl.classList.contains('lib--active')) {\n      refs.buttonWatchedEl.classList.remove('lib--active');\n      refs.buttonQueueEl.classList.add('lib--active');\n    }\n  }\n}\n\nrefs.buttonWatchedEl.addEventListener('click', handleButtonClick);\nrefs.buttonQueueEl.addEventListener('click', handleButtonClick);\nwindow.addEventListener('load', renderWatchedList);\n","import { firebaseApp } from './firebase-init';\nimport { getAuth, onAuthStateChanged, signOut } from 'firebase/auth';\nimport { refs } from './auth-modal-refs';\nimport { Notify } from 'notiflix';\n\nconst auth = getAuth(firebaseApp);\n\nconst monitorAuthState = async () => {\n  onAuthStateChanged(auth, user => {\n    if (user) {\n      refs.openModalLibraryBtn.classList.add('log-out');\n      refs.openModalLibraryBtn.setAttribute('title', 'Click to Log Out');\n      refs.openModalLibraryBtn.classList.remove('log-in');\n    } else {\n      refs.openModalLibraryBtn.classList.remove('log-out');\n      refs.openModalLibraryBtn.setAttribute('title', 'Click to Log In');\n      refs.openModalLibraryBtn.classList.add('log-in');\n    }\n  });\n};\nmonitorAuthState();\n\nconst logout = async e => {\n  if (!e.target.classList.contains('log-out')) {\n    return;\n  }\n  await signOut(auth);\n  Notify.success('You are loged out. See you soon');\n\n  setTimeout(() => window.location.replace('./index.html'), 2000);\n};\n\nrefs.openModalLibraryBtn.addEventListener('click', logout);\n"],"names":["$4O2bx","parcelRequire","$eVEnd","$a8fb871f337d10a4$export$add40575555c273c","listArr","map","id","title","poster_path","release_date","genres","getMoviePoster","getMovieTitle","getGenresLib","getReleaseDate","join","$0b5f6a1499574303$export$6ed414b8d8bead88","DatabaseAPI","async","$0b5f6a1499574303$export$8243be6ab7611de2","$dSs1Y","Loading","pulse","svgColor","markup","getWatchedList","$krGWQ","refs","galleryEl","insertAdjacentHTML","remove","window","removeEventListener","error","console","log","$7Y9D8","Report","info","$6f51af6bca2687d5$export$69bf332fc394edc5","getQueueList","libGalleryEl","$0a9b4fa6ebff9285$var$handleButtonClick","event","clickedButton","target","buttonWatchedEl","innerHTML","classList","contains","add","buttonQueueEl","addEventListener","$bcNH0","$d6814f0e564c1480$var$auth","$eyjy7","getAuth","firebaseApp","onAuthStateChanged","user","$5Zbuc","openModalLibraryBtn","setAttribute","$d6814f0e564c1480$var$monitorAuthState","e","signOut","Notify","success","setTimeout","location","replace"],"version":3,"file":"library.55e63dcf.js.map"}