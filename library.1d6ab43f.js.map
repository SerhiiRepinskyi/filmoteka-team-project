{"mappings":"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","sources":["src/js/library-window-listeners.js","src/js/render-watched.js","src/js/lib-card-markup.js","src/js/render-queue.js","src/js/library_button.js","src/js/modal-card_library.js","src/js/modal-buttons-library.js","src/js/firebase/firebase-auth-library.js"],"sourcesContent":["import onAuth from './onAuth';\nimport { onThemeBtnClick } from './themse-picker';\nwindow.addEventListener('load', onAuth);\ndocument\n  .querySelector('#theme-toggle')\n  .addEventListener('click', onThemeBtnClick);\n","import { DatabaseAPI } from './firebase/database-api';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport { Report } from 'notiflix';\nimport { refs } from './refs';\nimport { renderMarkup } from './lib-card-markup';\n\nexport const service = new DatabaseAPI();\n\nexport async function renderWatchedList() {\n  Loading.pulse({\n    svgColor: '#b92f2c',\n  });\n  try {\n    const listArr = await service.getWatchedList();\n    const markup = renderMarkup(listArr);\n    refs.libGalleryEl.insertAdjacentHTML('beforeend', markup);\n    window.removeEventListener('load', renderWatchedList);\n  } catch (error) {\n    Report.info(\n      'Filmoteka Info',\n      'This List is empty. Start adding some movies to see them here',\n      'OK'\n    );\n  }\n  Loading.remove();\n}\n","import {\n    getGenresLib,\n    getReleaseDate,\n    getMovieTitle,\n    getMoviePoster,\n  } from './markup-func';\n\nexport function renderMarkup(listArr) {\n    return listArr\n      .map(({ id, title, poster_path, release_date, genres }) => {\n        return `<li class='card-item' data-id='${id}'>\n        <div class='image__wrapper'>\n          <img class='movie__poster' src='${getMoviePoster(\n            poster_path\n          )}' width='395' alt='${title}' loading='lazy' />\n        </div>\n        <div class='card-item__info-wrapper'>\n        <h2 class='card-item__title'>${getMovieTitle(title)}</h2>\n        <div class='card-item__info'>\n        <p class='card-item__genre'>${getGenresLib(genres)}</p>\n        <span class='card-item__year'>|</span>\n        <p class='card-item__year'>${getReleaseDate(release_date)}</p>\n        </div>\n        </div>\n        </li>`;\n      })\n      .join('');\n  }","import { renderMarkup } from './lib-card-markup';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport { refs } from './refs';\nimport { service } from './render-watched';\nimport { Report } from 'notiflix';\n\nexport async function renderQueueList() {\n  Loading.pulse({\n    svgColor: '#b92f2c',\n  });\n  try {\n    const listArr = await service.getQueueList();\n    const markup = renderMarkup(listArr);\n    refs.libGalleryEl.insertAdjacentHTML('beforeend', markup);\n  } catch (error) {\n    Report.info(\n      'Filmoteka Info',\n      'This List is empty. Start adding some movies to see them here',\n      'OK'\n    );\n  }\n  Loading.remove();\n}\n","import { renderWatchedList } from './render-watched';\nimport { renderQueueList } from './render-queue';\nimport {refs} from './refs';\n\nfunction handleButtonClick(event) {\n  const clickedButton = event.target;\n  if (clickedButton === refs.buttonWatchedEl) {\n    refs.libGalleryEl.innerHTML = '';\n    renderWatchedList();\n    if (!refs.buttonWatchedEl.classList.contains('lib--active')) {\n      refs.buttonWatchedEl.classList.add('lib--active');\n      refs.buttonQueueEl.classList.remove('lib--active');\n    }\n  } else if (clickedButton === refs.buttonQueueEl) {\n    refs.libGalleryEl.innerHTML = '';\n    renderQueueList();\n    if (!refs.buttonQueueEl.classList.contains('lib--active')) {\n      refs.buttonWatchedEl.classList.remove('lib--active');\n      refs.buttonQueueEl.classList.add('lib--active');\n    }\n  }\n}\n\nrefs.buttonWatchedEl.addEventListener('click', handleButtonClick);\nrefs.buttonQueueEl.addEventListener('click', handleButtonClick);\nwindow.addEventListener('load', renderWatchedList);\n","import { FilmAPI } from './api';\nimport fetchModalCard from './modal-card_render';\n\nconst modalCardBackdrop = document.querySelector('.modal-card__backdrop');\nconst galeryList = document.querySelector('.library-cards__list');\nconst body = document.querySelector('body');\nconst modalCard = document.querySelector('.modal-card');\n\nconst btnCloseModalEl = document.querySelector('.modal-card__close-btn');\nconst modalCardAPI = new FilmAPI();\ngaleryList.addEventListener('click', getMovieObjOnClick);\n\nasync function getMovieObjOnClick(evt) {\n  if (!evt.target.closest('.card-item')) {\n    return;\n  }\n  let liId = evt.target.closest('.card-item').dataset.id;\n  const movieObj = await modalCardAPI.fetchDetails(liId);\n  fetchModalCard(movieObj);\n  body.classList.add('no-scroll');\n  modalCardBackdrop.classList.remove('hidden');\n}\n\nwindow.addEventListener('keydown', handleEscKeyDown);\n\nfunction handleEscKeyDown(event) {\n  if (event.code === 'Escape') {\n    body.classList.remove('no-scroll');\n    modalCardBackdrop.classList.add('hidden');\n  }\n}\nbtnCloseModalEl.addEventListener('click', evt => {\n  body.classList.remove('no-scroll');\n  modalCardBackdrop.classList.add('hidden');\n});\n\nmodalCardBackdrop.addEventListener('click', e => {\n  if (e.target === modalCardBackdrop) {\n    modalCardBackdrop.classList.add('hidden');\n    body.classList.remove('no-scroll');\n  }\n});\n","import { DatabaseAPI } from './firebase/database-api';\nimport { FilmAPI } from './api';\nimport { Notify } from 'notiflix';\n\nconst filmAPI = new FilmAPI();\nconst databaseAPI = new DatabaseAPI();\n\nconst galeryList = document.querySelector('.library-cards__list');\nconst modalCard = document.querySelector('.modal-card');\nlet movieId = '';\n\nconst switchWatchedBtnToRemove = () => {\n  setTimeout(() => {\n    const watchedBtn = document.querySelector('[data-card-modal-watched-film]');\n    watchedBtn.classList.remove('add-to-watched');\n    watchedBtn.classList.add('remove-from-watched');\n    watchedBtn.textContent = 'Remove from watched';\n  }, 150);\n};\n\nconst switchQueueButtonToRemove = () => {\n  setTimeout(() => {\n    const queueBtn = document.querySelector('[data-card-modal-queue-film]');\n    queueBtn.classList.remove('add-to-queue');\n    queueBtn.classList.add('remove-from-queue');\n    queueBtn.textContent = 'Remove from queue';\n  }, 150);\n};\n\nconst switchWatchedBtnToAdd = () => {\n  setTimeout(() => {\n    const watchedBtn = document.querySelector('[data-card-modal-watched-film]');\n    watchedBtn.classList.remove('remove-from-watched');\n    watchedBtn.classList.add('add-to-watched');\n    watchedBtn.textContent = 'Add to watched';\n  }, 150);\n};\n\nconst switchQueueButtonToAdd = () => {\n  setTimeout(() => {\n    const queueBtn = document.querySelector('[data-card-modal-queue-film]');\n    queueBtn.classList.remove('remove-from-queue');\n    queueBtn.classList.add('add-to-queue');\n    queueBtn.textContent = 'Add to queue';\n  }, 150);\n};\n\nexport const checkList = async e => {\n  if (!e.target.closest('.card-item')) {\n    return;\n  }\n\n  try {\n    movieId = Number(e.target.closest('.card-item').dataset.id);\n    const presentInWatched = await databaseAPI.checkPresenseInWatched(movieId);\n    if (presentInWatched) {\n      switchWatchedBtnToRemove();\n    } else if (!presentInWatched) {\n      switchWatchedBtnToAdd();\n    }\n    const presentInQueue = await databaseAPI.checkPresenseInQueue(movieId);\n    if (presentInQueue) {\n      switchQueueButtonToRemove();\n    } else if (!presentInQueue) {\n      switchQueueButtonToAdd();\n    }\n  } catch (error) {\n    Notify.failure('Ooops! Something went wrong. Try reloading page');\n  }\n};\n\nexport const addMovies = async e => {\n  if ('cardModalWatchedFilm' in e.target.dataset) {\n    try {\n      if (e.target.classList.contains('add-to-watched')) {\n        const movieObj = await filmAPI.fetchDetails(movieId);\n        await databaseAPI.addToWatched(movieObj);\n        Notify.success(`${movieObj.title} added to Watched List`);\n        switchWatchedBtnToRemove();\n        const presentInQueue = await databaseAPI.checkPresenseInQueue(movieId);\n        if (presentInQueue) {\n          switchQueueButtonToAdd();\n          await databaseAPI.removeMovieFromQueue(movieId);\n          Notify.success(`${movieObj.title} removed from Queue List`);\n        }\n      }\n    } catch (error) {\n      Notify.failure('Ooops! Something went wrong. Try reloading page');\n    }\n  } else if ('cardModalQueueFilm' in e.target.dataset) {\n    try {\n      if (e.target.classList.contains('add-to-queue')) {\n        const movieObj = await filmAPI.fetchDetails(movieId);\n        await databaseAPI.addToQueue(movieObj);\n        Notify.success(`${movieObj.title} added to Queue List`);\n        switchQueueButtonToRemove();\n        const presentInWatched = await databaseAPI.checkPresenseInWatched(\n          movieId\n        );\n        if (presentInWatched) {\n          switchWatchedBtnToAdd();\n          await databaseAPI.removeMovieFromWatched(movieId);\n          Notify.success(`${movieObj.title} removed from Watched List`);\n        }\n      }\n    } catch (error) {\n      Notify.failure('Ooops! Something went wrong. Try reloading page');\n    }\n  }\n};\n\nexport const removeMovies = async e => {\n  try {\n    if ('cardModalWatchedFilm' in e.target.dataset) {\n      if (e.target.classList.contains('remove-from-watched')) {\n        await databaseAPI.removeMovieFromWatched(movieId);\n        Notify.success(`Movie removed from Watched List`);\n\n        switchWatchedBtnToAdd();\n      }\n    } else if ('cardModalQueueFilm' in e.target.dataset) {\n      if (e.target.classList.contains('remove-from-queue')) {\n        await databaseAPI.removeMovieFromQueue(movieId);\n        Notify.success(`Movie removed from Queue List`);\n\n        switchQueueButtonToAdd();\n      }\n    }\n  } catch (error) {\n    console.log(error);\n    Notify.failure('Ooops! Something went wrong. Try reloading page');\n  }\n};\n\ngaleryList.addEventListener('click', checkList);\nmodalCard.addEventListener('click', addMovies);\nmodalCard.addEventListener('click', removeMovies);\n","import { firebaseApp } from './firebase-init';\nimport { getAuth, onAuthStateChanged, signOut } from 'firebase/auth';\nimport { refs } from './auth-modal-refs';\nimport { Notify } from 'notiflix';\n\nconst auth = getAuth(firebaseApp);\n\nconst monitorAuthState = async () => {\n  onAuthStateChanged(auth, user => {\n    if (user) {\n      refs.openModalLibraryBtn.classList.add('log-out');\n      refs.openModalLibraryBtn.setAttribute('title', 'Click to Log Out');\n      refs.openModalLibraryBtn.classList.remove('log-in');\n    } else {\n      refs.openModalLibraryBtn.classList.remove('log-out');\n      refs.openModalLibraryBtn.setAttribute('title', 'Click to Log In');\n      refs.openModalLibraryBtn.classList.add('log-in');\n    }\n  });\n};\nmonitorAuthState();\n\nconst logout = async e => {\n  if (!e.target.classList.contains('log-out')) {\n    return;\n  }\n  await signOut(auth);\n  Notify.success('You are loged out. See you soon');\n\n  setTimeout(() => window.location.replace('./index.html'), 2000);\n};\n\nrefs.openModalLibraryBtn.addEventListener('click', logout);\n"],"names":["$1beAg","parcelRequire","window","addEventListener","default","document","querySelector","$6p62o","onThemeBtnClick","$bpxeT","$3mSO2","$56c676e850ca829d$export$add40575555c273c","listArr","map","param","id","title","poster_path","release_date","genres","concat","getMoviePoster","getMovieTitle","getGenresLib","getReleaseDate","join","$d887eeac15aee035$export$6ed414b8d8bead88","$k30FB","DatabaseAPI","$d887eeac15aee035$export$8243be6ab7611de2","$d887eeac15aee035$var$_renderWatchedList","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","markup","$7rQOT","Loading","pulse","svgColor","getWatchedList","_ctx","sent","$4Nugj","refs","libGalleryEl","insertAdjacentHTML","removeEventListener","$6JpON","Report","info","remove","$f3e5ebb6bb433a3d$export$69bf332fc394edc5","$f3e5ebb6bb433a3d$var$_renderQueueList","getQueueList","$5f231e217f3687e3$var$handleButtonClick","event","clickedButton","target","buttonWatchedEl","innerHTML","classList","contains","add","buttonQueueEl","$d7eea1e5c1a66419$var$modalCardBackdrop","$d7eea1e5c1a66419$var$galeryList","$d7eea1e5c1a66419$var$body","$d7eea1e5c1a66419$var$btnCloseModalEl","$d7eea1e5c1a66419$var$modalCardAPI","$b7ONl","FilmAPI","$d7eea1e5c1a66419$var$_getMovieObjOnClick","evt","liId","movieObj","closest","dataset","fetchDetails","$iNDEe","code","e","$3a235dc3812267ee$var$filmAPI","$3a235dc3812267ee$var$databaseAPI","$3a235dc3812267ee$var$galeryList","$3a235dc3812267ee$var$modalCard","$3a235dc3812267ee$var$movieId","$3a235dc3812267ee$var$switchWatchedBtnToRemove","setTimeout","watchedBtn","textContent","$3a235dc3812267ee$var$switchQueueButtonToRemove","queueBtn","$3a235dc3812267ee$var$switchWatchedBtnToAdd","$3a235dc3812267ee$var$switchQueueButtonToAdd","$3a235dc3812267ee$export$89c8f3ec304e8dd7","presentInWatched","presentInQueue","Number","checkPresenseInWatched","checkPresenseInQueue","Notify","failure","$3a235dc3812267ee$export$4c424dd547d4a9d5","movieObj1","addToWatched","success","removeMovieFromQueue","addToQueue","removeMovieFromWatched","$3a235dc3812267ee$export$a1fc98f383adfb9f","console","log","t0","$53555ed19cee43ff$var$auth","$gQOBw","getAuth","$fGC9r","firebaseApp","$53555ed19cee43ff$var$monitorAuthState","onAuthStateChanged","user","$k4iT1","openModalLibraryBtn","setAttribute","$53555ed19cee43ff$var$logout","signOut","location","replace"],"version":3,"file":"library.1d6ab43f.js.map"}